// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MultiTenant.Catalog.Infrastructure.Migrations.MySql;

#nullable disable

namespace MultiTenant.Catalog.Infrastructure.Migrations.MySql.Migrations
{
    [DbContext(typeof(MySqlCatalogContext))]
    [Migration("20220429155626_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Business", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Business", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("BusinessId")
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("BusinessId1")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Logo")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VatNumber")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("BusinessId1");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("VatNumber")
                        .IsUnique();

                    b.ToTable("Organizations", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("Expiry")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("IsDemoPlan")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MaxDatabaseSize")
                        .HasColumnType("int");

                    b.Property<int>("MaxStorageSize")
                        .HasColumnType("int");

                    b.Property<int>("MaxUserCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Plans", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Resource", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("Capacity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DatabaseProvider")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ResourceType")
                        .HasColumnType("int");

                    b.Property<string>("ServerAddress")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ServerPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ServerPort")
                        .HasColumnType("int");

                    b.Property<int>("ServerType")
                        .HasColumnType("int");

                    b.Property<string>("ServerUserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Resources", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Subscription", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Expiry")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PlanId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PlanId");

                    b.ToTable("Subscriptions", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Tenant", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("ConnectionString")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("CreatedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("CreatedByName")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("DatabaseProvider")
                        .HasColumnType("int");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("InactiveDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ModifiedById")
                        .HasColumnType("char(36)");

                    b.Property<string>("ModifiedByName")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<Guid>("ResourceId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("ConnectionString")
                        .IsUnique();

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("ResourceId");

                    b.ToTable("Tenants", (string)null);
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Organization", b =>
                {
                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Business", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Business", null)
                        .WithMany("Organizations")
                        .HasForeignKey("BusinessId1");

                    b.OwnsMany("MultiTenant.Catalog.Domain.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            b1.Property<string>("City")
                                .HasColumnType("longtext");

                            b1.Property<string>("Country")
                                .HasColumnType("longtext");

                            b1.Property<Guid>("OrganizationId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("State")
                                .HasColumnType("longtext");

                            b1.Property<string>("Street")
                                .HasColumnType("longtext");

                            b1.Property<string>("ZipCode")
                                .HasColumnType("longtext");

                            b1.HasKey("Id");

                            b1.HasIndex("OrganizationId");

                            b1.ToTable("Address");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationId");
                        });

                    b.OwnsOne("MultiTenant.Catalog.Domain.ValueObjects.Contact", "Contact", b1 =>
                        {
                            b1.Property<Guid>("OrganizationId")
                                .HasColumnType("char(36)");

                            b1.Property<string>("Email")
                                .HasColumnType("longtext");

                            b1.Property<string>("Phone")
                                .HasColumnType("longtext");

                            b1.Property<string>("Website")
                                .HasColumnType("longtext");

                            b1.HasKey("OrganizationId");

                            b1.ToTable("Organizations");

                            b1.WithOwner()
                                .HasForeignKey("OrganizationId");
                        });

                    b.Navigation("Address");

                    b.Navigation("Business");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Subscription", b =>
                {
                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Organization", "Organization")
                        .WithMany("Subscriptions")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Tenant", b =>
                {
                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Organization", "Organization")
                        .WithOne("Tenant")
                        .HasForeignKey("MultiTenant.Catalog.Domain.Entities.Tenant", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MultiTenant.Catalog.Domain.Entities.Resource", "Resource")
                        .WithMany("Tenants")
                        .HasForeignKey("ResourceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Business", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Organization", b =>
                {
                    b.Navigation("Subscriptions");

                    b.Navigation("Tenant");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Plan", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("MultiTenant.Catalog.Domain.Entities.Resource", b =>
                {
                    b.Navigation("Tenants");
                });
#pragma warning restore 612, 618
        }
    }
}
